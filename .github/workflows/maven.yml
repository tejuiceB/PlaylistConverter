name: PlayList Converter CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11', '17', '21' ]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Build and Test
      run: mvn -B clean verify

    - name: Generate JaCoCo Report
      run: mvn jacoco:report

    - name: Upload Coverage Report
      if: matrix.java == '17'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: target/site/jacoco/

    - name: Upload coverage to Codecov
      if: matrix.java == '17'
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: target/site/jacoco/jacoco.xml
        fail_ci_if_error: false
        verbose: true

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: playlist-converter
        path: target

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/playlist-converter:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/playlist-converter:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/playlist-converter:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/playlist-converter:buildcache,mode=max

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to Production
      run: |
        echo "Add your deployment steps here"
        # Example: Deploy to cloud platform or server
